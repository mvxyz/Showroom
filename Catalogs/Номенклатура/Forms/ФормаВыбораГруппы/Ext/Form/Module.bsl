&НаКлиенте
Перем ФормаПодбора;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ТипЦен") Тогда
		ТипЦен = Параметры.ТипЦен;
	Иначе
		ТипЦен = Справочники.ТипыЦенНоменклатуры.ПустаяСсылка();
	КонецЕсли;
	
	Если Параметры.Свойство("КонтролироватьОстатки") Тогда
		КонтролироватьОстатки = Параметры.КонтролироватьОстатки;
	КонецЕсли;
	
	ЗакрыватьПриВыборе = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ВыбранноеЗначение.Свойство("ФормаПодбора") Тогда
		
		ФормаПодбора = ВыбранноеЗначение.ФормаПодбора; 
		
		Если ВыбранноеЗначение.Свойство("НеЗакрывать") Тогда
						
			НеЗакрывать = ВыбранноеЗначение.НеЗакрывать;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ВыбранноеЗначение.Вставить("ФормаВыбораГруппы", ЭтаФорма);
	
	ОповеститьОВыборе(ВыбранноеЗначение);
	
	Если НЕ НеЗакрывать Тогда
		
		Если ФормаПодбора.Открыта() Тогда
			ФормаПодбора.Закрыть()
		КонецЕсли;
		
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриПовторномОткрытии()
	
	Если ФормаПодбора <> Неопределено 
		И ФормаПодбора.Открыта() Тогда
		
		ФормаПодбора.Открыть();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ФормаПодбора <> Неопределено 
		И ФормаПодбора.Открыта() 
		И НЕ НеЗакрывать Тогда
		
		ФормаПодбора.Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДерево

&НаКлиенте
Процедура ДеревоВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Дерево.ТекущиеДанные;
	ТекущаяСтрока = Элементы.Дерево.ТекущаяСтрока;
	
	Если ТекущиеДанные.ЭтоГруппа Тогда
		
		Если ГруппаИмеетПодчиненныеЭлементыНеГруппы(ТекущиеДанные.Ссылка) Тогда
			
			Элементы.Дерево.Развернуть(ТекущаяСтрока, Ложь);
			
			Отбор = Новый Структура;
			Отбор.Вставить("Родитель", ТекущиеДанные.Ссылка); 	
			
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("ТипЦен", ТипЦен);
			ПараметрыФормы.Вставить("Отбор", Отбор);
			ПараметрыФормы.Вставить("КонтролироватьОстатки", КонтролироватьОстатки);
			
			ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаПодбора", ПараметрыФормы, ЭтаФорма);
			
		Иначе
			
			Если Элементы.Дерево.Развернут(ТекущаяСтрока) = Истина Тогда
				Элементы.Дерево.Свернуть(ТекущаяСтрока);
			Иначе
				Элементы.Дерево.Развернуть(ТекущаяСтрока, Ложь);
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		//Отбор = Новый Структура;
		//Отбор.Вставить("Родитель", ТекущиеДанные.Родитель);
		////Отбор.Вставить("Ссылка", ТекущиеДанные.Ссылка);
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ТипЦен", ТипЦен);
		//ПараметрыФормы.Вставить("Отбор", Отбор);
		ПараметрыФормы.Вставить("КонтролироватьОстатки", КонтролироватьОстатки);
		
		ПараметрыФормы.Вставить("ВыбранныйЭлемент", ТекущиеДанные.Ссылка);
		
		ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаПодбора", ПараметрыФормы, ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ГруппаИмеетПодчиненныеЭлементыНеГруппы(Ссылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	Номенклатура.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Родитель = &Родитель
	|	И НЕ Номенклатура.ЭтоГруппа
	|	И НЕ Номенклатура.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Родитель", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат НЕ РезультатЗапроса.Пустой();
	
КонецФункции

#КонецОбласти


