
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Отбор.Свойство("Родитель") Тогда
		Заголовок = СокрЛП(Параметры.Отбор.Родитель);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.ТипЦен) Тогда
		ТипЦен = Параметры.ТипЦен;
	Иначе
		ТипЦен = ПолучитьФункциональнуюОпцию("ТипЦенНоменклатурыМобильногоКлиента");
	КонецЕсли;
	
	Если Параметры.Свойство("КонтролироватьОстатки") Тогда
		КонтролироватьОстатки = Параметры.КонтролироватьОстатки;
	КонецЕсли;
	
	Если Параметры.Свойство("ВыбранныйЭлемент") Тогда
		ОтобратьПоВыбранномуЭлементуНоменклатуры(Параметры.ВыбранныйЭлемент);
		Элементы.СписокКомпоновщикНастроекПользовательскиеНастройки.Видимость = Истина;
	Иначе
		Элементы.СписокКомпоновщикНастроекПользовательскиеНастройки.Видимость = Ложь;
	КонецЕсли;
	
    Элементы.ХарактеристикаНоменклатуры.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры");

	Список.Параметры.УстановитьЗначениеПараметра("ТипЦен", ТипЦен);
	
	ОтображатьОстатки = "Все";
	ОтображатьЦены = "С ценами";
	
	ВалютаЦеныСпособ = "В выбранной валюте";
	ВалютаЦеныВыбор = Справочники.Валюты.НайтиПоКоду("643");
	
	ЗакрыватьПриВыборе = Истина;
	ЗапрашиватьКоличество = Истина;
	
	ЗакрыватьПриВыборе = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ИзменитьОтображениеОстатков();
	
	ИзменитьОтображениеЦен();
	
	Элементы.ВалютаЦеныВыбор.Видимость = ВалютаЦеныСпособ = "В выбранной валюте";
	
	ЗакрыватьПриВыборе = НЕ НеЗакрывать;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		
		ВыбратьНоменклатуру(ВыбранноеЗначение.Количество, 
							ВыбранноеЗначение.Цена, 
							ВыбранноеЗначение.ЕдиницаИзмерения,
							ВыбранноеЗначение.Валюта);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НеЗакрыватьПриВыбореПриИзменении(Элемент)
	ЗакрыватьПриВыборе = НЕ НеЗакрывать;
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьОстаткиПриИзменении(Элемент)
	
	ИзменитьОтображениеОстатков();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьЦеныПриИзменении(Элемент)
	
	ИзменитьОтображениеЦен();
	
КонецПроцедуры

&НаКлиенте
Процедура ТипЦенОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ТипЦен = ВыбранноеЗначение; 
	
	ТипЦенОбработкаВыбораНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ТипЦенОбработкаВыбораНаСервере()
	
	Список.Параметры.УстановитьЗначениеПараметра("ТипЦен", ТипЦен);
	
КонецПроцедуры

&НаКлиенте
Процедура ВалютаЦеныСпособПриИзменении(Элемент)
	ИзменитьЗапросСпискаНаСервере();
	Элементы.ВалютаЦеныВыбор.Видимость = ВалютаЦеныСпособ = "В выбранной валюте";
КонецПроцедуры

&НаКлиенте
Процедура ВалютаЦеныВыборПриИзменении(Элемент)
	ИзменитьЗапросСпискаНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
		
	СтандартнаяОбработка = Ложь;
	
	ЕдиницаИзмерения = ТекущиеДанные.ЕдиницаИзмерения;
	Цена = ТекущиеДанные.Цена;
	
	Если ЗапрашиватьКоличество Тогда
		
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Номенклатура", ТекущиеДанные.Ссылка);
		ПараметрыФормы.Вставить("ХарактеристикаНоменклатуры", ТекущиеДанные.ХарактеристикаНоменклатуры);
		ПараметрыФормы.Вставить("Цена", Цена);
		ПараметрыФормы.Вставить("ЕдиницаИзмерения", ЕдиницаИзмерения);
		ПараметрыФормы.Вставить("Валюта", ТекущиеДанные.Валюта);
		
		ПараметрыФормы.Вставить("ОткрытаИзФормыПодбора", Истина);
		ПараметрыФормы.Вставить("ТипЦенДокумента", ТипЦен);
		ПараметрыФормы.Вставить("Количество", 1);
		ПараметрыФормы.Вставить("КонтролироватьОстатки", КонтролироватьОстатки);
		
		ОткрытьФорму("Документ.Заказ.Форма.ФормаСтроки", ПараметрыФормы, ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	Иначе
		
		ВыбратьНоменклатуру(1, Цена, ЕдиницаИзмерения, ТекущиеДанные.Валюта);
		
		//ФормаЗаказа = ВладелецФормы.ВладелецФормы;
		//Если НЕ НеЗакрывать И ФормаЗаказа.Открыта() Тогда
		//	ФормаЗаказа.Активизировать();
		//КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыбратьНоменклатуру(Количество, Цена, ЕдиницаИзмерения, Валюта)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если КонтролироватьОстатки 
		И НЕ ОбщиеПроцедурыВызовСервера.ОстаткаТовараДостаточно(
		ТекущиеДанные.Ссылка, 
		ТекущиеДанные.ХарактеристикаНоменклатуры,
		Количество, ЕдиницаИзмерения) Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВыбора = Новый Структура;
	СтруктураВыбора.Вставить("Номенклатура", ТекущиеДанные.Ссылка);
	СтруктураВыбора.Вставить("ВидНоменклатуры", ТекущиеДанные.ВидНоменклатуры);
	СтруктураВыбора.Вставить("ХарактеристикаНоменклатуры", ТекущиеДанные.ХарактеристикаНоменклатуры);
	СтруктураВыбора.Вставить("Количество", Количество);
	СтруктураВыбора.Вставить("Цена", Цена);
	СтруктураВыбора.Вставить("ЕдиницаИзмерения", ЕдиницаИзмерения);
	СтруктураВыбора.Вставить("Валюта", Валюта);
	СтруктураВыбора.Вставить("ФормаПодбора", ЭтаФорма);
	СтруктураВыбора.Вставить("НеЗакрывать", НеЗакрывать);
	
	ОповеститьОВыборе(СтруктураВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьОтображениеОстатков()

	ЭлементыОтбора = Список.КомпоновщикНастроек.Настройки.Отбор.Элементы;
	
	Для каждого ЭлементОтбора Из ЭлементыОтбора Цикл
	
		Если ЭлементОтбора.Представление = "Остатки" Тогда
			ЭлементОтбора.Использование = (ОтображатьОстатки <> "Все");
			Прервать;
		КонецЕсли;
	
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ИзменитьОтображениеЦен()
	
	ИзменитьЗапросСпискаНаСервере();
	
	Если ОтображатьЦены = "С ценами" Тогда
		Элементы.Цена.Видимость = Истина;
		Элементы.ГруппаТипЦен.Видимость = Истина;
	Иначе
		Элементы.Цена.Видимость = Ложь;
		Элементы.ГруппаТипЦен.Видимость = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ИзменитьЗапросСпискаНаСервере()
	
	Если ОтображатьЦены = "С ценами" Тогда
		
		Если ВалютаЦеныСпособ = "В выбранной валюте" Тогда
			КоэффициентПересчетаВалютыВыбранной = ОбщиеПроцедурыВызовСервера.ПолучитьКоэффициентПересчетаВалюты(ВалютаЦеныВыбор); 
			Список.ТекстЗапроса = ТекстЗапросаСПересчетомЦеныПоВыбраннойВалюте();
			Список.Параметры.УстановитьЗначениеПараметра("КоэффициентПересчетаВалютыВыбранной", КоэффициентПересчетаВалютыВыбранной);
			Список.Параметры.УстановитьЗначениеПараметра("ВалютаВыбранная", ВалютаЦеныВыбор);
		Иначе
			Список.ТекстЗапроса = ТекстЗапросаСЦенами();
		КонецЕсли;
		
		Список.Параметры.УстановитьЗначениеПараметра("ТипЦен", ТипЦен);
		
	Иначе
		Список.ТекстЗапроса = ТекстЗапросаБезЦен(); 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ТекстЗапросаСЦенами()
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ТоварыОстатки.Номенклатура КАК Номенклатура,
	               |	ТоварыОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |	СУММА(ТоварыОстатки.СвободныйОстаток) КАК СвободныйОстаток
	               |ПОМЕСТИТЬ втОстатки
	               |ИЗ
	               |	РегистрСведений.ТоварыОстатки КАК ТоварыОстатки
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТоварыОстатки.Номенклатура,
	               |	ТоварыОстатки.ХарактеристикаНоменклатуры
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	спрНоменклатура.ВерсияДанных КАК ВерсияДанных,
	               |	спрНоменклатура.ПометкаУдаления КАК ПометкаУдаления,
	               |	спрНоменклатура.Родитель КАК Родитель,
	               |	спрНоменклатура.ЭтоГруппа КАК ЭтоГруппа,
	               |	спрНоменклатура.Код КАК Код,
	               |	спрНоменклатура.Наименование КАК Наименование,
	               |	спрНоменклатура.Артикул КАК Артикул,
	               |	спрНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	спрНоменклатура.НаименованиеПолное КАК НаименованиеПолное,
	               |	спрНоменклатура.Услуга КАК Услуга,
	               |	спрНоменклатура.ВидНоменклатуры КАК ВидНоменклатуры,
	               |	спрНоменклатура.Штрихкод КАК Штрихкод,
	               |	спрНоменклатура.ВестиУчетПоХарактеристикам КАК ВестиУчетПоХарактеристикам,
	               |	спрНоменклатура.ВестиУчетПоСериям КАК ВестиУчетПоСериям,
	               |	спрНоменклатура.Предопределенный КАК Предопределенный,
	               |	спрНоменклатура.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных,
	               |	спрНоменклатура.Представление КАК Представление,
	               |	ЕСТЬNULL(ХарактеристикиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК ХарактеристикаНоменклатуры,
	               |	ЦеныНоменклатуры.Цена КАК Цена,
	               |	ЕСТЬNULL(втОстатки.СвободныйОстаток, 0) КАК СвободныйОстаток,
	               |	спрНоменклатура.Ссылка КАК Ссылка,
	               |	ЦеныНоменклатуры.Валюта КАК Валюта
	               |ИЗ
	               |	Справочник.Номенклатура КАК спрНоменклатура
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	               |		ПО спрНоменклатура.Ссылка = ХарактеристикиНоменклатуры.Владелец
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	               |		ПО спрНоменклатура.Ссылка = ЦеныНоменклатуры.Номенклатура
	               |			И (ЕСТЬNULL(ХарактеристикиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) = ЦеныНоменклатуры.ХарактеристикаНоменклатуры)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ втОстатки КАК втОстатки
	               |		ПО спрНоменклатура.Ссылка = втОстатки.Номенклатура
	               |			И (втОстатки.ХарактеристикаНоменклатуры = ЕСТЬNULL(ХарактеристикиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)))
	               |ГДЕ
	               |	ЦеныНоменклатуры.ТипЦен = &ТипЦен
	               |	И НЕ спрНоменклатура.ЭтоГруппа";
	
	Возврат ТекстЗапроса;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТекстЗапросаБезЦен()
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ТоварыОстатки.Номенклатура КАК Номенклатура,
	               |	ТоварыОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |	СУММА(ТоварыОстатки.СвободныйОстаток) КАК СвободныйОстаток
	               |ПОМЕСТИТЬ втОстатки
	               |ИЗ
	               |	РегистрСведений.ТоварыОстатки КАК ТоварыОстатки
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТоварыОстатки.Номенклатура,
	               |	ТоварыОстатки.ХарактеристикаНоменклатуры
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	спрНоменклатура.ВерсияДанных КАК ВерсияДанных,
	               |	спрНоменклатура.ПометкаУдаления КАК ПометкаУдаления,
	               |	спрНоменклатура.Родитель КАК Родитель,
	               |	спрНоменклатура.ЭтоГруппа КАК ЭтоГруппа,
	               |	спрНоменклатура.Код КАК Код,
	               |	спрНоменклатура.Наименование КАК Наименование,
	               |	спрНоменклатура.Артикул КАК Артикул,
	               |	спрНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	спрНоменклатура.НаименованиеПолное КАК НаименованиеПолное,
	               |	спрНоменклатура.Услуга КАК Услуга,
	               |	спрНоменклатура.ВидНоменклатуры КАК ВидНоменклатуры,
	               |	спрНоменклатура.Штрихкод КАК Штрихкод,
	               |	спрНоменклатура.ВестиУчетПоХарактеристикам КАК ВестиУчетПоХарактеристикам,
	               |	спрНоменклатура.ВестиУчетПоСериям КАК ВестиУчетПоСериям,
	               |	спрНоменклатура.Предопределенный КАК Предопределенный,
	               |	спрНоменклатура.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных,
	               |	спрНоменклатура.Представление КАК Представление,
	               |	ЕСТЬNULL(ХарактеристикиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК ХарактеристикаНоменклатуры,
	               |	ЕСТЬNULL(втОстатки.СвободныйОстаток, 0) КАК СвободныйОстаток,
	               |	спрНоменклатура.Ссылка КАК Ссылка,
	               |	0 КАК Цена,
	               |	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК Валюта
	               |ИЗ
	               |	Справочник.Номенклатура КАК спрНоменклатура
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	               |		ПО спрНоменклатура.Ссылка = ХарактеристикиНоменклатуры.Владелец
	               |		ЛЕВОЕ СОЕДИНЕНИЕ втОстатки КАК втОстатки
	               |		ПО спрНоменклатура.Ссылка = втОстатки.Номенклатура
	               |			И (втОстатки.ХарактеристикаНоменклатуры = ЕСТЬNULL(ХарактеристикиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)))
	               |ГДЕ
	               |	НЕ спрНоменклатура.ЭтоГруппа";
	
	Возврат ТекстЗапроса;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТекстЗапросаСПересчетомЦеныПоВыбраннойВалюте()

	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ТоварыОстатки.Номенклатура КАК Номенклатура,
	               |	ТоварыОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |	СУММА(ТоварыОстатки.СвободныйОстаток) КАК СвободныйОстаток
	               |ПОМЕСТИТЬ втОстатки
	               |ИЗ
	               |	РегистрСведений.ТоварыОстатки КАК ТоварыОстатки
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТоварыОстатки.Номенклатура,
	               |	ТоварыОстатки.ХарактеристикаНоменклатуры
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	спрНоменклатура.ВерсияДанных КАК ВерсияДанных,
	               |	спрНоменклатура.ПометкаУдаления КАК ПометкаУдаления,
	               |	спрНоменклатура.Родитель КАК Родитель,
	               |	спрНоменклатура.ЭтоГруппа КАК ЭтоГруппа,
	               |	спрНоменклатура.Код КАК Код,
	               |	спрНоменклатура.Наименование КАК Наименование,
	               |	спрНоменклатура.Артикул КАК Артикул,
	               |	спрНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	спрНоменклатура.НаименованиеПолное КАК НаименованиеПолное,
	               |	спрНоменклатура.Услуга КАК Услуга,
	               |	спрНоменклатура.ВидНоменклатуры КАК ВидНоменклатуры,
	               |	спрНоменклатура.Штрихкод КАК Штрихкод,
	               |	спрНоменклатура.ВестиУчетПоХарактеристикам КАК ВестиУчетПоХарактеристикам,
	               |	спрНоменклатура.ВестиУчетПоСериям КАК ВестиУчетПоСериям,
	               |	спрНоменклатура.Представление КАК Представление,
	               |	ЕСТЬNULL(ХарактеристикиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК ХарактеристикаНоменклатуры,
	               |	ЦеныНоменклатуры.Цена / (&КоэффициентПересчетаВалютыВыбранной / (КурсыВалют.Курс / КурсыВалют.Кратность)) КАК Цена,
	               |	ЕСТЬNULL(втОстатки.СвободныйОстаток, 0) КАК СвободныйОстаток,
	               |	спрНоменклатура.Ссылка КАК Ссылка,
	               |	&ВалютаВыбранная КАК Валюта
	               |ИЗ
	               |	Справочник.Номенклатура КАК спрНоменклатура
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	               |		ПО спрНоменклатура.Ссылка = ХарактеристикиНоменклатуры.Владелец
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	               |			ПО ЦеныНоменклатуры.Валюта = КурсыВалют.Валюта
	               |		ПО спрНоменклатура.Ссылка = ЦеныНоменклатуры.Номенклатура
	               |			И (ЕСТЬNULL(ХарактеристикиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) = ЦеныНоменклатуры.ХарактеристикаНоменклатуры)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ втОстатки КАК втОстатки
	               |		ПО спрНоменклатура.Ссылка = втОстатки.Номенклатура
	               |			И (втОстатки.ХарактеристикаНоменклатуры = ЕСТЬNULL(ХарактеристикиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)))
	               |ГДЕ
	               |	ЦеныНоменклатуры.ТипЦен = &ТипЦен
	               |	И НЕ спрНоменклатура.ЭтоГруппа";
	
	Возврат ТекстЗапроса;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьВалютуТипаЦены(ТипЦен)
	
	Возврат ТипЦен.ВалютаЦены;	
	
КонецФункции

&НаСервере
Процедура ОтобратьПоВыбранномуЭлементуНоменклатуры(ВыбранныйЭлементНоменклатуры)
	
	Отбор = Список.КомпоновщикНастроек.Настройки.Отбор;
	
	ОтборВПользовательскихНастройках = Список.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(Отбор.ИдентификаторПользовательскойНастройки);
																			
	РаботаемСНастройками = Истина;																		
	Если ОтборВПользовательскихНастройках <> Неопределено Тогда
		
		РаботаемСНастройками = Ложь;
		Отбор = ОтборВПользовательскихНастройках;		
	
	КонецЕсли;																		
																			
	ОтборПоВыбранномуЭлементуНоменклатуры = Неопределено;
	ПолеНоменклатураСсылка = Новый ПолеКомпоновкиДанных("Ссылка");
	
	Для каждого ЭлементОтбора Из Отбор.Элементы Цикл
	
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных")
			и ЭлементОтбора.ЛевоеЗначение = ПолеНоменклатураСсылка Тогда
			
			ОтборПоВыбранномуЭлементуНоменклатуры = ЭлементОтбора;
			Прервать;
		
		КонецЕсли;	
	
	КонецЦикла;
	
	Если ОтборПоВыбранномуЭлементуНоменклатуры = Неопределено Тогда
	
		ОтборПоВыбранномуЭлементуНоменклатуры = Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборПоВыбранномуЭлементуНоменклатуры.ЛевоеЗначение = ПолеНоменклатураСсылка;
		ОтборПоВыбранномуЭлементуНоменклатуры.Использование = Ложь;
		ОтборПоВыбранномуЭлементуНоменклатуры.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
		ОтборПоВыбранномуЭлементуНоменклатуры.ИдентификаторПользовательскойНастройки = Новый УникальныйИдентификатор;
		Элементы.Список.СоздатьЭлементыФормыПользовательскихНастроек();
	
	КонецЕсли;
	
	Если РаботаемСНастройками Тогда
	
		ОтборПоВыбранномуЭлементуНоменклатуры = Список.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(
												ОтборПоВыбранномуЭлементуНоменклатуры.ИдентификаторПользовательскойНастройки);
	
	КонецЕсли;
	
	ОтборПоВыбранномуЭлементуНоменклатуры.Использование = Истина;
	
	ОтборПоВыбранномуЭлементуНоменклатуры.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборПоВыбранномуЭлементуНоменклатуры.ПравоеЗначение = ВыбранныйЭлементНоменклатуры;

КонецПроцедуры

#КонецОбласти
