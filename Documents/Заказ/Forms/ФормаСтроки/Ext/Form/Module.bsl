
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОткрытаИзФормыПодбора = Параметры.ОткрытаИзФормыПодбора;
	ОткрытаИзФормыТовара = Параметры.ОткрытаИзФормыТовара;
	
	Если ОткрытаИзФормыПодбора
		ИЛИ ОткрытаИзФормыТовара Тогда
		
		ШрифтЖирный = Новый Шрифт(Элементы.Номенклатура.Шрифт,,,Истина);
		
		Заголовок = "Введите количество и цену";
		
		Элементы.Номенклатура.Вид = ВидПоляФормы.ПолеНадписи;
		Элементы.Номенклатура.Шрифт = ШрифтЖирный;
		Элементы.Номенклатура.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		
		Элементы.ХарактеристикаНоменклатуры.Вид = ВидПоляФормы.ПолеНадписи;
		Элементы.ХарактеристикаНоменклатуры.Шрифт = ШрифтЖирный;
		Элементы.ХарактеристикаНоменклатуры.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		
		ВалютаФормыПодбора = Параметры.Валюта; 
		
	Иначе
		Заголовок = "Строка " + Строка(Параметры.НомерСтроки);
	КонецЕсли;
	
	Номенклатура 				= Параметры.Номенклатура;
	ХарактеристикаНоменклатуры 	= Параметры.ХарактеристикаНоменклатуры;
	Цена 						= Параметры.Цена;
	Количество 					= Параметры.Количество;
	ЕдиницаИзмерения 			= Параметры.ЕдиницаИзмерения;
	Валюта 						= Параметры.Валюта;
	ТипЦенДокумента				= Параметры.ТипЦенДокумента;
	КонтролироватьОстатки		= Параметры.КонтролироватьОстатки;
	
	ВалютаЦеныСпособ = "В выбранной валюте";
	
	ВалютаЦеныВыбор = Справочники.Валюты.НайтиПоКоду("643");
	Если НЕ ЗначениеЗаполнено(ВалютаЦеныВыбор) Тогда
	   ВалютаЦеныВыбор = Справочники.Валюты.ПустаяСсылка();
	КонецЕсли;
	
	СтароеЗначениеКоэффициента = ЕдиницаИзмерения.Коэффициент;
	
	СтарыйКоэффициентПересчетаВалюты = ОбщиеПроцедурыВызовСервера.ПолучитьКоэффициентПересчетаВалюты(Валюта);
	
	РассчитатьСумму(ЭтаФорма);
	
	Элементы.ХарактеристикаНоменклатуры.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры")
													И Номенклатура.ВестиУчетПоХарактеристикам;

	ОбновитьТаблицуЦен();
													
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЦеныУстановлены Тогда
		
		ОтобразитьТаблицуЦен();
		
		ВыделитьСтрокуСТипомЦенДокумента();
		
	КонецЕсли;
	
	Если ОткрытаИзФормыПодбора 
		И ВалютаЦеныСпособ = "В выбранной валюте"
		И ВалютаЦеныВыбор <> ВалютаФормыПодбора
		Тогда
		
		НовыйКоэффициентПересчетаВалюты = ОбщиеПроцедурыВызовСервера.ПолучитьКоэффициентПересчетаВалюты(ВалютаЦеныВыбор);
		
		КоэффициентПересчетаВалютыФормыПодбора = ОбщиеПроцедурыВызовСервера.ПолучитьКоэффициентПересчетаВалюты(ВалютаФормыПодбора); 
		
		Если НовыйКоэффициентПересчетаВалюты <> КоэффициентПересчетаВалютыФормыПодбора 
			И КоэффициентПересчетаВалютыФормыПодбора > 0 Тогда
			
			Цена = Цена / (НовыйКоэффициентПересчетаВалюты / КоэффициентПересчетаВалютыФормыПодбора);
			
		КонецЕсли;
		
		СтарыйКоэффициентПересчетаВалюты = НовыйКоэффициентПересчетаВалюты;
		
		Валюта = ВалютаЦеныВыбор;
		
		РассчитатьСумму(ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КоличествоПриИзменении(Элемент)
	РассчитатьСумму(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ЦенаПриИзменении(Элемент)
	РассчитатьСумму(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ЕдиницаИзмеренияПриИзменении(Элемент)
	
	НовоеЗначениеКоэффициента = ЗначениеКоэффициента(ЕдиницаИзмерения);
	
	Если НовоеЗначениеКоэффициента <> СтароеЗначениеКоэффициента 
		И СтароеЗначениеКоэффициента > 0 Тогда
		
		Цена = Цена * НовоеЗначениеКоэффициента / СтароеЗначениеКоэффициента;
		
	КонецЕсли;
	
	СтароеЗначениеКоэффициента = НовоеЗначениеКоэффициента;
	
	РассчитатьСумму(ЭтаФорма);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗначениеКоэффициента(ЕдиницаИзмерения)
	
	Возврат ЕдиницаИзмерения.Коэффициент;
	
КонецФункции

&НаКлиенте
Процедура ВалютаПриИзменении(Элемент)
	
	НовыйКоэффициентПересчетаВалюты = ОбщиеПроцедурыВызовСервера.ПолучитьКоэффициентПересчетаВалюты(Валюта);
	
	Если НовыйКоэффициентПересчетаВалюты <> СтарыйКоэффициентПересчетаВалюты 
		И СтарыйКоэффициентПересчетаВалюты > 0 Тогда
		
		Цена = Цена / (НовыйКоэффициентПересчетаВалюты / СтарыйКоэффициентПересчетаВалюты);
		
	КонецЕсли;
	
	СтарыйКоэффициентПересчетаВалюты = НовыйКоэффициентПересчетаВалюты;
	
	РассчитатьСумму(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	
	ПриИзмененииНоменклатурыИлиХарактеристики();
	
КонецПроцедуры

&НаКлиенте
Процедура ХарактеристикаНоменклатурыПриИзменении(Элемент)
	
	ПриИзмененииНоменклатурыИлиХарактеристики();
	
КонецПроцедуры

&НаКлиенте
Процедура ВалютаЦеныСпособПриИзменении(Элемент)
	
	ОтобразитьТаблицуЦен();
	ВыделитьСтрокуСТипомЦенДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ВалютаЦеныВыборПриИзменении(Элемент)
	
	ОтобразитьТаблицуЦен();
	ВыделитьСтрокуСТипомЦенДокумента();
	ЗаполнитьРеквизитыШапкиПоТекущимДаннымТаблицыЦен();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокЦен

&НаКлиенте
Процедура ТаблицаЦенПриАктивизацииСтроки(Элемент)
	
	// При открытии формы процедура выполняться не должна
	Если НЕ ЭтоВыборЦены Тогда
		ЭтоВыборЦены = Истина;
		Возврат;
	КонецЕсли;
	
	ЗаполнитьРеквизитыШапкиПоТекущимДаннымТаблицыЦен();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Готово(Команда)
	
	ЗакрываемПоКнопкеГотово = Истина;
	
	ПередатьВФормуЗаказа();

КонецПроцедуры

&НаКлиенте
Процедура ПередатьВФормуЗаказа()

	Результат = Новый Структура("НомерСтроки, 
								|Номенклатура,
								|ХарактеристикаНоменклатуры,
								|Цена, 
								|Количество, 
								|ЕдиницаИзмерения,
								|Валюта");
	
	ЗаполнитьЗначенияСвойств(Результат, ЭтаФорма);
	
	Если Цена = 0 Тогда
		ТекстСообщения = "Не указана цена";
		ПоказатьОповещениеПользователя(ТекстСообщения);
	КонецЕсли;
	
	Если Количество = 0 Тогда
		ТекстСообщения = "Не указано количество";
		ПоказатьОповещениеПользователя(ТекстСообщения);
	КонецЕсли;
	
	Если КонтролироватьОстатки 
		И НЕ ОбщиеПроцедурыВызовСервера.ОстаткаТовараДостаточно(
		Номенклатура, 
		ХарактеристикаНоменклатуры,
		Количество, ЕдиницаИзмерения) Тогда
		Возврат;
	КонецЕсли;
	
	Если ОткрытаИзФормыПодбора Тогда
		
		ОповеститьОВыборе(Результат);
		
	ИначеЕсли ОткрытаИзФормыТовара Тогда
		
		Оповестить("ВыбранТоварВТекущийЗаказ", Результат, ЭтаФорма);
			
		Если ТипЗнч(ВладелецФормы) = Тип("УправляемаяФорма")
			И ВладелецФормы.Открыта() Тогда
			ВладелецФормы.Закрыть();
		КонецЕсли;
			
		Если ЭтаФорма.Открыта() Тогда
			Закрыть();
		КонецЕсли;
	
	Иначе
		Если ЭтаФорма.Открыта() Тогда
			Закрыть(Результат);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура РассчитатьСумму(Форма)
	Форма.Сумма = Форма.Цена * Форма.Количество;
КонецПроцедуры

&НаСервере
Процедура ОбновитьТаблицуЦен()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЦеныНоменклатуры.ТипЦен КАК ТипЦен,
		|	ЦеныНоменклатуры.Цена КАК Цена,
		|	ЦеныНоменклатуры.Валюта КАК Валюта,
		|	ЦеныНоменклатуры.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ЕСТЬNULL(КурсыВалют.Курс, 0) КАК Курс,
		|	ЕСТЬNULL(КурсыВалют.Кратность, 0) КАК Кратность,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(КурсыВалют.Кратность, 0) <> 0
		|			ТОГДА ЕСТЬNULL(КурсыВалют.Курс, 0) / ЕСТЬNULL(КурсыВалют.Кратность, 0)
		|		ИНАЧЕ ЕСТЬNULL(КурсыВалют.Курс, 0)
		|	КОНЕЦ КАК КоэффициентПересчетаВалюты
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
		|		ПО ЦеныНоменклатуры.Валюта = КурсыВалют.Валюта
		|ГДЕ
		|	ЦеныНоменклатуры.Номенклатура = &Номенклатура
		|	И ЦеныНоменклатуры.ХарактеристикаНоменклатуры = &ХарактеристикаНоменклатуры";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("ХарактеристикаНоменклатуры", ХарактеристикаНоменклатуры);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ЦеныУстановлены = НЕ РезультатЗапроса.Пустой(); 
	
	Если ЦеныУстановлены Тогда
		ТаблицаЦенБазовая.Загрузить(РезультатЗапроса.Выгрузить());
	КонецЕсли;
	
	Элементы.ГруппаТаблицаЦен.Видимость = ЦеныУстановлены;
	Элементы.ГруппаВалютаЦены.Видимость = ЦеныУстановлены;
	Элементы.ДекорацияЦеныНеУстановлены.Видимость = НЕ ЦеныУстановлены;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииНоменклатурыИлиХарактеристики()

	Если ЗначениеЗаполнено(ТипЦенДокумента) Тогда
		
		ДанныеЦены = ОбщиеПроцедурыВызовСервера.ПолучитьЦенуНоменклатуры(
												Номенклатура,
												ТипЦенДокумента,
												ХарактеристикаНоменклатуры);
		
		Цена 				= ДанныеЦены.Цена;
		Валюта 				= ДанныеЦены.Валюта;
		ЕдиницаИзмерения 	= ДанныеЦены.ЕдиницаИзмерения;
		
		РассчитатьСумму(ЭтаФорма);
	
	Иначе
		Цена = 0;
		Сумма = 0;
	КонецЕсли;
	
	ОбновитьТаблицуЦен();
	
	ОтобразитьТаблицуЦен();

	ВыделитьСтрокуСТипомЦенДокумента();
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьТаблицуЦен()

	Если ВалютаЦеныСпособ = "В валюте цены" Тогда
		
		Элементы.ВалютаЦеныВыбор.Доступность = Ложь;
		
		ТаблицаЦен.Загрузить(ТаблицаЦенБазовая.Выгрузить());
		
	Иначе
		
		Элементы.ВалютаЦеныВыбор.Доступность = Истина;
		
		ТаблицаЦен.Очистить();
		
		Если НЕ ЗначениеЗаполнено(ВалютаЦеныВыбор) Тогда
		   Возврат;
		КонецЕсли;
		
		КоэффициентПересчетаВыбраннойВалюты = ОбщиеПроцедурыВызовСервера.ПолучитьКоэффициентПересчетаВалюты(ВалютаЦеныВыбор);
		
		Для каждого Стр Из ТаблицаЦенБазовая Цикл
			
			НоваяСтрока = ТаблицаЦен.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Стр);
			НоваяСтрока.Валюта = ВалютаЦеныВыбор;
			
			Если Стр.КоэффициентПересчетаВалюты > 0 Тогда
				НоваяСтрока.Цена = Стр.Цена / (КоэффициентПересчетаВыбраннойВалюты / Стр.КоэффициентПересчетаВалюты);
			КонецЕсли;
		
		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры

// Позиционируемся на строку с типом цен документа-владельца
&НаКлиенте
Процедура ВыделитьСтрокуСТипомЦенДокумента()
	
	НайденныеСтроки = ТаблицаЦен.НайтиСтроки(Новый Структура("ТипЦен", ТипЦенДокумента));
	Если НайденныеСтроки.Количество() > 0 Тогда
		Элементы.ТаблицаЦен.ТекущаяСтрока = НайденныеСтроки[0].ПолучитьИдентификатор();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРеквизитыШапкиПоТекущимДаннымТаблицыЦен()
	
	ТекущиеДанные = Элементы.ТаблицаЦен.ТекущиеДанные;
	
	// Если не установлены цены для товара
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;

	Цена = ТекущиеДанные.Цена;
	ЕдиницаИзмерения = ТекущиеДанные.ЕдиницаИзмерения;
	Валюта = ТекущиеДанные.Валюта;
	
	СтароеЗначениеКоэффициента = ЗначениеКоэффициента(ЕдиницаИзмерения);
	СтарыйКоэффициентПересчетаВалюты = ОбщиеПроцедурыВызовСервера.ПолучитьКоэффициентПересчетаВалюты(Валюта);
	
	РассчитатьСумму(ЭтаФорма);
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если НЕ ЗакрываемПоКнопкеГотово И Модифицированность И НЕ ПользовательОтветилНаВопрос Тогда
		
		ОбработчикВыбораПользователя = 
		Новый ОписаниеОповещения("ОбработатьРешениеОПереносеВЗаказ", 
		ЭтотОбъект);
		
		ЗаголовокВопроса = 
		НСтр("ru = 'Внимание!'");
		
		ТекстВопроса = "Данные строки были изменены! Перенести в заказ?";
		
		ВариантыВыбора = РежимДиалогаВопрос.ДаНет;
		ВариантПоУмолчанию = КодВозвратаДиалога.Да;
		
		ПоказатьВопрос(ОбработчикВыбораПользователя, ТекстВопроса, ВариантыВыбора,,
						ВариантПоУмолчанию, ЗаголовокВопроса);
						
		Отказ = Истина;
						
	КонецЕсли;
	
КонецПроцедуры
						
&НаКлиенте
Процедура ОбработатьРешениеОПереносеВЗаказ(ОтветПользователя, ДопПараметры) Экспорт
	
	ПользовательОтветилНаВопрос = Истина;
	
	Если ОтветПользователя = КодВозвратаДиалога.Таймаут 
		Или ОтветПользователя = КодВозвратаДиалога.Нет Тогда
		Закрыть();
		Возврат;
	КонецЕсли;
	
	ПередатьВФормуЗаказа();
	
КонецПроцедуры

#КонецОбласти




