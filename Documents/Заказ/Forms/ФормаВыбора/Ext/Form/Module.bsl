
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ПараметрыТовара") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры.ПараметрыТовара);
		
	ИначеЕсли Параметры.Свойство("ТоварыКорзины") Тогда
		
		 ТоварыКорзины.ЗагрузитьЗначения(Параметры.ТоварыКорзины.ВыгрузитьЗначения());
		 ЭтоПереносИзКорзины = Истина;
		 
	Иначе	
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если ВыбраннаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Если НЕ ЭтоПереносИзКорзины Тогда 
		
		ВыбратьВЗаказ(ВыбраннаяСтрока, 1);
		
	Иначе	
		
		ВыбратьВЗаказИзКорзины(ВыбраннаяСтрока);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыборЗавершение(Число, ДополнительныеПараметры) Экспорт
	
	Если Число <> Неопределено И Число <> 0 Тогда
		ВыбратьВЗаказ(ДополнительныеПараметры, Число);	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыбратьВЗаказ(ВыбраннаяСтрока, Количество)
	
	ПараметрыФормы = Новый Структура("Ключ", ВыбраннаяСтрока);
	
	ФормаЗаказа = ПолучитьФорму("Документ.Заказ.ФормаОбъекта", ПараметрыФормы);
	ТоварыЗаказа = ФормаЗаказа.Объект.Товары;
	
	ВалютаЗаказа = ФормаЗаказа.Валюта;
	//ВалютаЗаказа = ПолучитьВалютуРубли(); // Если заказы всегда в рублях
	
	ТекущийТоварУжеЕстьВЗаказе = ОбщегоНазначенияКлиент.ТекущийТоварУжеЕстьВЗаказе(Номенклатура, ХарактеристикаНоменклатуры, ТоварыЗаказа);
	Если ТекущийТоварУжеЕстьВЗаказе Тогда
		Возврат;
	КонецЕсли;
	
	НоваяСтрока = ТоварыЗаказа.Добавить();
	
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ЭтаФорма);
	НоваяСтрока.Количество = Количество;
	НоваяСтрока.ЕдиницаИзмерения = ЕдиницаИзмерения;
	ТипЦенДокумента = ФормаЗаказа.Объект.ТипЦен;
	
	ДанныеЦены = ОбщиеПроцедурыВызовСервера.ПолучитьЦенуНоменклатуры(
											НоваяСтрока.Номенклатура,
											ТипЦенДокумента,
											НоваяСтрока.ХарактеристикаНоменклатуры);
											
	ОбщиеПроцедурыКлиентСервер.РассчитатьЦенуПоКурсуВалюты(
											НоваяСтрока, 
											ВалютаЗаказа,
											Валюта, 
											ФормаЗаказа.СтарыйКоэффициентПересчетаВалютыДокумента);
										
	ОбщиеПроцедурыКлиентСервер.РассчитатьСуммуТабЧасти(НоваяСтрока);
	ФормаЗаказа.Объект.СуммаДокумента = ФормаЗаказа.Объект.Товары.Итог("Сумма");
	ФормаЗаказа.УстановитьПредставленияТоваров();	
	
	ФормаЗаказа.Модифицированность = Истина;
	
	Если НЕ ЗначениеЗаполнено(ДанныеЦены.Цена) Тогда
		
		ТекстСообщения = "Для типа цен '" 
		+ СокрЛП(ТипЦенДокумента) + "' у товара '" 
		+ СокрЛП(НоваяСтрока.Номенклатура) + "' значение не установлено!";
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		
	ИначеЕсли ТипЦенДокумента <> ТипЦен 
		ИЛИ ДанныеЦены.Валюта <> ВалютаЗаказа Тогда
		
		ТекстСообщения = "Цена товара '" + СокрЛП(Номенклатура) 
		+ "' введена по типу цен '" + СокрЛП(ТипЦен) 
		+ "' в валюте - " + СокрЛП(ВалютаЗаказа);
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		
	КонецЕсли;

	ФормаЗаказа.РежимОткрытияОкна = РежимОткрытияОкнаФормы.Независимый;
	
	ФормаЗаказа.Открыть();
	
	Если ТипЗнч(ВладелецФормы) = Тип("УправляемаяФорма") 
		И ВладелецФормы.Открыта() Тогда
		ВладелецФормы.Закрыть();
	КонецЕсли;
	
	Если ЭтаФорма.Открыта() Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВЗаказИзКорзины(ВыбраннаяСтрока)
	
	ЕстьДобавленныеСтроки = Ложь;

	ПараметрыФормы = Новый Структура("Ключ", ВыбраннаяСтрока);
	ФормаЗаказа = ПолучитьФорму("Документ.Заказ.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	
	ДоговорКонтрагента = ФормаЗаказа.Объект.ДоговорКонтрагента;
	ТипЦенДокумента = ФормаЗаказа.Объект.ТипЦен;	
	
	ВалютаЗаказа = ФормаЗаказа.Валюта;
	//ВалютаЗаказа = ПолучитьВалютуРубли(); // Если заказы всегда в рублях
	
	Для каждого Элемент Из ТоварыКорзины Цикл
		
		ЭлементНоменклатура = Элемент.Значение.Номенклатура;
		ЭлементХарактеристикаНоменклатуры = Элемент.Значение.ХарактеристикаНоменклатуры;
		ЭлементКоличество = Элемент.Значение.Количество;
		
		ТекущийТоварУжеЕстьВЗаказе = ОбщегоНазначенияКлиент.ТекущийТоварУжеЕстьВЗаказе(ЭлементНоменклатура,ЭлементХарактеристикаНоменклатуры, ФормаЗаказа.Объект.Товары);
		Если ТекущийТоварУжеЕстьВЗаказе Тогда
			Элемент.Пометка = Истина;  // Этот товар не будем очищать в корзине
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ФормаЗаказа.Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Элемент.Значение);
		
		ДанныеЦены = ОбщиеПроцедурыВызовСервера.ПолучитьЦенуНоменклатуры(
								НоваяСтрока.Номенклатура,
								ТипЦенДокумента,
								НоваяСтрока.ХарактеристикаНоменклатуры);
								
		НоваяСтрока.Цена = ДанныеЦены.Цена;						
						
		//						
		НовоеЗначениеКоэффициента = ЗначениеКоэффициента(НоваяСтрока.ЕдиницаИзмерения);
		СтароеЗначениеКоэффициента = ЗначениеКоэффициента(ДанныеЦены.ЕдиницаИзмерения);
 
		Если НовоеЗначениеКоэффициента <> СтароеЗначениеКоэффициента 
			И СтароеЗначениеКоэффициента > 0 Тогда
			
			НоваяСтрока.Цена = НоваяСтрока.Цена * НовоеЗначениеКоэффициента / СтароеЗначениеКоэффициента;
			
		КонецЕсли;						
		//
								
		ОбщиеПроцедурыКлиентСервер.РассчитатьЦенуПоКурсуВалюты(
										НоваяСтрока, 
										ВалютаЗаказа, 
										ДанныеЦены.Валюта, 
										ФормаЗаказа.СтарыйКоэффициентПересчетаВалютыДокумента);
										
		Если НЕ ЗначениеЗаполнено(ДанныеЦены.Цена) Тогда
			ТекстСообщения = "Для типа цен '" + СокрЛП(ТипЦенДокумента) +  
			"' у товара '" + СокрЛП(НоваяСтрока.Номенклатура) +
			"' значение цены не установлено!";
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
						
		ОбщиеПроцедурыКлиентСервер.РассчитатьСуммуТабЧасти(НоваяСтрока);
		
		ЕстьДобавленныеСтроки = Истина;
	
	КонецЦикла;
	
	Если ЕстьДобавленныеСтроки Тогда
		
		ФормаЗаказа.Объект.СуммаДокумента = ФормаЗаказа.Объект.Товары.Итог("Сумма");
		ФормаЗаказа.УстановитьПредставленияТоваров();	
		ФормаЗаказа.Модифицированность = Истина;
		
		ФормаЗаказа.РежимОткрытияОкна = РежимОткрытияОкнаФормы.Независимый;
		ФормаЗаказа.Открыть();	
		
	КонецЕсли;
	
	Оповестить("ВыполненаПопыткаПереносаТоваровИзКорзиныВЗаказ", ТоварыКорзины, ЭтаФорма); 
	
	Закрыть();

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЕдиницуИзмерения(Номенклатура)
	
	Возврат Номенклатура.ЕдиницаИзмерения; 	
	
КонецФункции

&НаСервереБезКонтекста
Функция ЗначениеКоэффициента(ЕдиницаИзмерения)
	
	Возврат ЕдиницаИзмерения.Коэффициент;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьВалютуРубли()
	
	Возврат Справочники.Валюты.НайтиПоКоду("643");
	
КонецФункции

#КонецОбласти
















































