
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче 
	// параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	ОбновитьПовторноИспользуемыеЗначения();

	Элементы.Процент.Видимость = Константы.ВестиПодробныйПротокол.Получить();
	Элементы.ГруппаНовыеОбъекты.Видимость = Ложь;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)

	Если Не ТекущаяСтадияРаботы = "Завершение" Тогда

		СтандартнаяОбработка = Ложь;
		Отказ = Истина;

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ЭкспортныеПроцедурыИФункции

&НаКлиенте
Процедура ВыполнитьСинхронизацию(Параметры) Экспорт

	РежимСинхронизации      = Параметры.РежимСинхронизации;
	ДатаНачалаСинхронизации = Параметры.ДатаНачалаСинхронизации;

	ПодключитьОбработчикОжидания("ВыполнитьСинхронизациюНачало", 0.1, Истина);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыполнитьСинхронизациюНачало() 

	ПараметрыЗапуска = Новый Структура();
	ПараметрыЗапуска.Вставить("РежимСинхронизации", РежимСинхронизации);
	ПараметрыЗапуска.Вставить("ДатаНачалаСинхронизации", ДатаНачалаСинхронизации);
	ПараметрыЗапуска.Вставить("УникальныйИдентификатор", УникальныйИдентификатор);

	ОбменВызовСервера.ЗапуститьСинхронизациюССерверомВФоне(
		ПараметрыЗапуска, ФоновоеЗаданиеИдентификатор, ФоновоеЗаданиеАдресХранилища);

	ПодключитьОбработчикОжидания("ВыполнитьСинхронизациюПроверитьИсполнение", 1, Истина);

КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьСинхронизациюПроверитьИсполнение()

	Результат = СинхронизацияЗавершена();
	
	Если Результат.ОбновитьДатуСинхронизации Тогда
		Оповестить("ОбновитьДатуСинхронизации");
	КонецЕсли;
	
	Если Результат.ЗаданиеВыполнено 
	 Или Не Результат.СообщениеОбОшибке = Неопределено Тогда

		ЗавершитьСинхронизацию(СведенияОЗагруженныхДанных);

	Иначе
		ПодключитьОбработчикОжидания("ВыполнитьСинхронизациюПроверитьИсполнение", 1, Истина);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция СинхронизацияЗавершена()

	Результат = Новый Структура();
	Результат.Вставить("ЗаданиеВыполнено", Ложь);
	Результат.Вставить("СообщениеОбОшибке", Неопределено);
	Результат.Вставить("ОбновитьДатуСинхронизации", Ложь);

	Задание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(ФоновоеЗаданиеИдентификатор);

	Если Задание = Неопределено Тогда
		Результат.СообщениеОбОшибке = 
			НСтр("ru = 'Не удалось выполнить синхронизацию. См. протокол обмена'");

	ИначеЕсли Задание.Состояние = СостояниеФоновогоЗадания.ЗавершеноАварийно Тогда
		Результат.СообщениеОбОшибке = ПодробноеПредставлениеОшибки(Задание.ИнформацияОбОшибке);

	ИначеЕсли Задание.Состояние = СостояниеФоновогоЗадания.Завершено Тогда
		Результат.ЗаданиеВыполнено = Истина;

	КонецЕсли;
	
	Если Не Задание = Неопределено Тогда

		ВсеСообщения = Задание.ПолучитьСообщенияПользователю(Истина);
		Если ВсеСообщения = Неопределено Тогда
			ВсеСообщения = Новый Массив();
		КонецЕсли;

		Для Каждого СообщениеПользователю Из ВсеСообщения Цикл

			МассивРезультатовРаботы = СтрРазделить(СообщениеПользователю.Текст, ";");

			ТекущаяСтадияРаботы = МассивРезультатовРаботы[0];
			ЕстьОшибки = Булево(МассивРезультатовРаботы[1]);
			ВСообщенияхЕстьДанные = Булево(МассивРезультатовРаботы[2]);
			Если СтрНайти(МассивРезультатовРаботы[3], ",") Тогда
				СчетчикиОбъектов = СтрРазделить(МассивРезультатовРаботы[3], ",");
			Иначе

				Если ТекущаяСтадияРаботы = "Завершение" И ЗначениеЗаполнено(ФоновоеЗаданиеАдресХранилища) Тогда

					СведенияОЗагруженныхДанных = 
						ПолучитьИзВременногоХранилища(ФоновоеЗаданиеАдресХранилища);

				КонецЕсли;

			КонецЕсли;

			Если ТекущаяСтадияРаботы = "Подготовка" Тогда

				Процент = 5;
				Элементы.Этап1.Картинка = БиблиотекаКартинок.ДлительнаяОперация;

			ИначеЕсли ТекущаяСтадияРаботы = "Подключение" Тогда

				Процент = 10;
				Если ЕстьОшибки Тогда
					Элементы.Этап1.Картинка = БиблиотекаКартинок.КомандаУдалитьСтроку;
				КонецЕсли;

			ИначеЕсли ТекущаяСтадияРаботы = "СозданиеСообщений" Тогда

				Процент = 15;
				Если ЕстьОшибки Тогда
					Элементы.Этап1.Картинка = БиблиотекаКартинок.КомандаУдалитьСтроку;
				Иначе
					Элементы.Этап1.Картинка = БиблиотекаКартинок.ЗадачаУспешноеВыполнение;
				КонецЕсли;

			ИначеЕсли ТекущаяСтадияРаботы = "ОтправкаДанных" Тогда

				Процент = 35;
				Если ЕстьОшибки Тогда
					Элементы.Этап1.Картинка = БиблиотекаКартинок.КомандаУдалитьСтроку;
				Иначе
					Элементы.Этап1.Картинка = БиблиотекаКартинок.ЗадачаУспешноеВыполнение;
					Элементы.Этап2.Картинка = БиблиотекаКартинок.ДлительнаяОперация;
				КонецЕсли;

			ИначеЕсли ТекущаяСтадияРаботы = "ЗагрузкаДанных" Тогда

				Процент = 50;

			ИначеЕсли ТекущаяСтадияРаботы = "ПросмотрДанных" Тогда
				Процент = 65;

				Если ЕстьОшибки Тогда
					Элементы.Этап2.Картинка = БиблиотекаКартинок.КомандаУдалитьСтроку;
				Иначе
					Элементы.Этап2.Картинка = БиблиотекаКартинок.ЗадачаУспешноеВыполнение;
					Элементы.Этап3.Картинка = БиблиотекаКартинок.ДлительнаяОперация;
				КонецЕсли;

			ИначеЕсли ТекущаяСтадияРаботы = "ЗаписьДанных" Тогда

				Процент = 80;
				ОтобразитьСведенияОНовыхОбъектах(СчетчикиОбъектов);

			ИначеЕсли ТекущаяСтадияРаботы = "Завершение" Тогда
				Процент = 95;

				Если Не ЕстьОшибки Тогда

					Элементы.Этап2.Картинка = БиблиотекаКартинок.ЗадачаУспешноеВыполнение;
					Элементы.Этап3.Картинка = БиблиотекаКартинок.ЗадачаУспешноеВыполнение;

				КонецЕсли;

			ИначеЕсли ТекущаяСтадияРаботы = "ОбновитьДатуСинхронизации" Тогда
				Результат.ОбновитьДатуСинхронизации = Истина;

			КонецЕсли;

		КонецЦикла;

	КонецЕсли;

	Возврат Результат;

КонецФункции

&НаСервере
Процедура ОтобразитьСведенияОНовыхОбъектах(Счетчики)

	ГруппаСчетчиковВидна = Ложь;

	ОтобразитьИнформациюПоРазделу(Счетчики[0], 
		Элементы.ПояснениеКонтрагенты, Элементы.КоличествоКонтрагентов, ГруппаСчетчиковВидна);

	ОтобразитьИнформациюПоРазделу(Счетчики[1], 
		Элементы.ПояснениеТовары, Элементы.КоличествоТоваров, ГруппаСчетчиковВидна);

	Элементы.ГруппаНовыеОбъекты.Видимость = ГруппаСчетчиковВидна;

КонецПроцедуры

&НаСервере
Процедура ОтобразитьИнформациюПоРазделу(Количество, НадписьЗаголовок, НадписьКоличество, ГруппаСчетчиковВидна)

	Если Число(Количество) > 0 Тогда

		ГруппаСчетчиковВидна = Истина;

		НадписьКоличество.Заголовок = 
			СтрШаблон(
				НСтр("ru = '+%1'; en = '+%1'"), Формат(Количество, "ЧГ="));

	Иначе

		НадписьЗаголовок.Видимость = Ложь;
		НадписьКоличество.Видимость = Ложь;

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьСинхронизацию(СведенияОЗагруженныхДанных = Неопределено)

	ОбщегоНазначенияВызовСервера.УстановитьПараметрыСеанса();

	Оповестить("СоздатьУведомления");
	Оповестить("СинхронизацияЗавершена", СведенияОЗагруженныхДанных);

	ПодключитьОбработчикОжидания("ЗакрытьФорму", 0.1, Истина);

	ОбменКлиент.НайтиИПоказатьОшибкиПриСинхронизации();

КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму()

	ТекущаяСтадияРаботы = "Завершение";

	Закрыть(ЕстьОшибки);

КонецПроцедуры

#КонецОбласти

