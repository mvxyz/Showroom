
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче 
	// параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	Если Параметры.Свойство("Раздел") Тогда
		Элементы[Параметры.Раздел].Видимость = Истина;
	Иначе
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	Заголовок = Параметры.Заголовок;

	Набор = Константы.СоздатьНабор();
	Набор.Прочитать();

	ЗначениеВРеквизитФормы(Набор, "НаборКонстант");

	ОбщегоНазначенияСервер.ЗаполнитьСписокКомандВРазделеСервис(КомандыСервис);

	УстановитьВидимостьЭлементов();
	
	ДатаПоследнегоОбновления = Константы.ДатаПоследнегоОбновления.Получить();
	Если ЗначениеЗаполнено(ДатаПоследнегоОбновления) Тогда
		ЭтоПервоеПодключение = Ложь;
		Элементы.ФормаПодключить.Доступность = Ложь;
		Элементы.ДекорацияПодключен.Заголовок = "Мобильный клиент подключен.";
		Элементы.ФормаПовторноеПодключение.Доступность = Истина;
	Иначе
		ЭтоПервоеПодключение = Истина;
		Элементы.ФормаПодключить.Доступность = Истина;
		Элементы.ДекорацияПодключен.Заголовок = "Мобильный клиент не подключен.";
		Элементы.ФормаПовторноеПодключение.Доступность = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "ВыполненоПодключениеКЦентральнойБазе" 
		Или ИмяСобытия = "ВыполненоПолноеУдаление" Тогда

		Закрыть();

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НаборКонстантАдресЦентральнойБазыПриИзменении(Элемент)

	ЗаписатьОбъект();

КонецПроцедуры

&НаКлиенте
Процедура НаборКонстантПользовательЦентральнойБазыПриИзменении(Элемент)

	ЗаписатьОбъект();

КонецПроцедуры

&НаКлиенте
Процедура НаборКонстантПарольПользователяПриИзменении(Элемент)

	ЗаписатьОбъект();

КонецПроцедуры

&НаКлиенте
Процедура НаборКонстантИспользоватьФоновуюСинхронизациюПриИзменении(Элемент)

	Если НаборКонстант.ИспользоватьФоновуюСинхронизацию 
		И Не НаборКонстант.ОтправлятьДанныеСразу Тогда
		НаборКонстант.ОтправлятьДанныеСразу = Истина;
	КонецЕсли;

	ЗаписатьОбъект();

КонецПроцедуры

&НаКлиенте
Процедура НаборКонстантОтправлятьДанныеСразуПриИзменении(Элемент)

	ЗаписатьОбъект();

КонецПроцедуры

&НаКлиенте
Процедура НаборКонстантВыгружатьПротоколСобытийНаСерверПриИзменении(Элемент)

	ЗаписатьОбъект();

КонецПроцедуры

&НаКлиенте
Процедура НаборКонстантПодробнаяИнформацияВПротоколеПриИзменении(Элемент)

	ЗаписатьОбъект();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТабличныхПолей

&НаКлиенте
Процедура КомандыСервисВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	ТекДанные = Элементы.КомандыСервис.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если ТекДанные.Команда = "УдалитьВсе" Тогда
		
		УдалитьВсеДанные(Элемент);
		
	ИначеЕсли ТекДанные.Команда = "ОткрытьПротокол" Тогда
		
		ОткрытьПротокол(Элемент);
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УдалитьВсеДанные(Команда)

	ОчисткаБазыДанныхКлиент.НачатьОчисткуБазыДанных(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПротокол(Команда)

	ОткрытьФорму("РегистрСведений.ПротоколСобытий.Форма.ФормаСписка");

КонецПроцедуры

&НаКлиенте
Процедура Подключить(Команда)
	
	Если ЭтоПервоеПодключение Тогда
	  	ОткрытьФорму("ОбщаяФорма.НастройкаПодключения");
	Иначе
		
	ОбработчикВыбораПользователя = 
		Новый ОписаниеОповещения("ОбработатьРешениеПервыйВопросОПовторномПодключении", 
			ЭтотОбъект, ЭтаФорма);

	ЗаголовокВопроса = 
		НСтр("ru = 'Повторное получение всех данных'");

	ТекстВопроса = 
		НСтр("ru = 'ВСЕ данные будут загружены из центральной базы повторно.
		    |Это может занять длительное время!
			|Продолжить?'");

	ВариантыВыбора = РежимДиалогаВопрос.ДаНет;
	ВариантПоУмолчанию = КодВозвратаДиалога.Нет;

	ПоказатьВопрос(ОбработчикВыбораПользователя, ТекстВопроса, ВариантыВыбора,,
		ВариантПоУмолчанию, ЗаголовокВопроса);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьРешениеПервыйВопросОПовторномПодключении(ОтветПользователя, ДопПараметры) Экспорт
	
	Если ОтветПользователя = КодВозвратаДиалога.Таймаут 
	 Или ОтветПользователя = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;

	ОбработчикВыбораПользователя = 
		Новый ОписаниеОповещения("ОбработатьРешениеВторойВопросОПовторномПодключении", 
			ЭтотОбъект, ДопПараметры);

	ЗаголовокВопроса = 
		НСтр("ru = 'Повторное получение всех данных'");
	ТекстВопроса = 
		НСтр("ru = 'Внимание! ВСЕ данные будут получены заново.
			|Продолжить загрузку ВСЕХ данных?'");

	ВариантыВыбора     = РежимДиалогаВопрос.ДаНет;
	ВариантПоУмолчанию = КодВозвратаДиалога.Нет;

	ПоказатьВопрос(ОбработчикВыбораПользователя, ТекстВопроса, ВариантыВыбора,,
		ВариантПоУмолчанию, ЗаголовокВопроса);

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьРешениеВторойВопросОПовторномПодключении(ОтветПользователя, ДопПараметры) Экспорт

	Если ОтветПользователя = КодВозвратаДиалога.Таймаут 
		Или ОтветПользователя = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму("ОбщаяФорма.НастройкаПодключения");
		
КонецПроцедуры 

&НаКлиенте
Процедура ПовторноеПодключение(Команда)
	Элементы.ФормаПодключить.Доступность = Истина;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗакрытьФорму()

	ЭтаФорма.Закрыть();

КонецПроцедуры

&НаСервере
Процедура ЗаписатьОбъект()

	Набор = РеквизитФормыВЗначение("НаборКонстант");
	Набор.Записать();

	ЗначениеВРеквизитФормы(Набор, "НаборКонстант");

	Модифицированность = Ложь;

	УстановитьВидимостьЭлементов();
	ОбновитьПовторноИспользуемыеЗначения();

КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементов()

	Элементы.НаборКонстантОтправлятьДанныеСразу.Видимость = Не НаборКонстант.ИспользоватьФоновуюСинхронизацию;
	Элементы.ДекорацияОтправлятьДанныеСразу.Видимость =  Не НаборКонстант.ИспользоватьФоновуюСинхронизацию;

КонецПроцедуры

#КонецОбласти


