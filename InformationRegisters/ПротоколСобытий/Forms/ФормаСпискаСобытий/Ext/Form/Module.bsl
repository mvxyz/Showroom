
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("Заголовок") Тогда
		АвтоЗаголовок = Ложь;
		Заголовок     = Параметры.Заголовок;
	КонецЕсли;
	
	ЗаголовокСообщения = НСтр("ru = 'Сообщение администратору'; en = 'Write to administrator'");

	Если Параметры.Свойство("МоментыВремениСобытий") Тогда
		МоментыВремениСобытий.ЗагрузитьЗначения(Параметры.МоментыВремениСобытий);
	КонецЕсли;

	СписокТекстом = 
		"<html>
		|<head>
		|	<meta name=""viewport"" %content% http-equiv=""Content-Type""/>
		|</head>
		|<script type=""text/javascript"">
		|function ShowHideContent(spoiler, clicked) 
		|{
		|	if (spoiler.style.display != 'none')
		|	{
		|		spoiler.style.display = 'none';
		|		clicked.innerHTML = clicked.innerHTML.replace(""--"",""+"");
		|		clicked.innerHTML = clicked.innerHTML.replace(""Скрыть"",""Показать"");
		|	}
		|else
		|	{
		|		spoiler.style.display = 'block';
		|		clicked.innerHTML = clicked.innerHTML.replace(""+"",""--"");
		|		clicked.innerHTML = clicked.innerHTML.replace(""Показать"",""Скрыть"")
		|	}
		|}
		|</script>
		|<body>
		|	<div style = ""font-family:Arial;font-size:%1px;line-height: 1.1"">";

	Если ЭтоУстройствоСБольшимЭкраном() Тогда
		СписокТекстом = СтрЗаменить(СписокТекстом, "%1", "14");
	Иначе
		СписокТекстом = СтрЗаменить(СписокТекстом, "%1", "12");
	КонецЕсли;

	Счетчик       = 1;
	ЕстьОшибки    = Ложь;
	СписокТекстом = СтрЗаменить(
		СписокТекстом, 
		"%content%", 
		"content = ""text/html,width=320,initial-scale=1, user-scalable = no""");

	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("НеобходимоОтобразитьПослеСинхронизации", Истина);

	Выборка = РегистрыСведений.ПротоколСобытий.Выбрать(,,СтруктураОтбора);
	Пока Выборка.Следующий() Цикл

		Счетчик = Счетчик + 1;

		Если Выборка.ТипСобытия = Перечисления.ТипыСобытийПротокола.Информация Тогда
			Картинка = БиблиотекаКартинок.ЗадачаУспешноеВыполнение;

		ИначеЕсли Выборка.ТипСобытия = Перечисления.ТипыСобытийПротокола.Предупреждение Тогда
			Картинка = БиблиотекаКартинок.ЗадачаНеУспешноеВыполнение;

		ИначеЕсли Выборка.ТипСобытия = Перечисления.ТипыСобытийПротокола.Ошибка Тогда
			Картинка   = БиблиотекаКартинок.КомандаУдалитьСтроку;
			ЕстьОшибки = Истина;

		КонецЕсли;

		ДвоичныеДанныеФото = Картинка.ПолучитьДвоичныеДанные();
		Формат             = Строка(Картинка.Формат());

		СтрокаИсточника = "data:image/" + Формат + ";base64," + Base64Строка(ДвоичныеДанныеФото);

		ПозицияНачалаОписанияОшибки = СтрНайти(Выборка.Описание, ":#");

		Если ПозицияНачалаОписанияОшибки > 0 Тогда

			СтрокаНачало = СтрШаблон(
				"<a id=""aid%1"" href=""javascript:void(0)""
					|onclick=""ShowHideContent(document.getElementById('id%1'), this)"">%2</a>",
				Строка(Счетчик),
				НСтр("ru = 'Показать дополнительную информацию (для администратора)'; 
					 |en = 'See details'"));

			ПозицияНачалаТекстаОбОшибке = ПозицияНачалаОписанияОшибки + 2;
			СтрокаТекстОшибкиДляАдминистратора = СтрШаблон(
				"<div id=""id%1"" style=""display: none; margin:0px 0px 0px 10px;"">%2</div>",
				Строка(Счетчик),
				Сред(Выборка.Описание, ПозицияНачалаТекстаОбОшибке));

			СтрокаТекстОшибкиДляАдминистратора = 
				СтрЗаменить(СтрокаТекстОшибкиДляАдминистратора, Символы.ПС, "<br/>");

			СтрокаТекстОшибкиДляПользователя = 
				Сред(Выборка.Описание, 1, СтрНайти(Выборка.Описание, "#") - 1);

			СтрокаТекстОшибкиДляПользователя = 
				СтрЗаменить(СтрокаТекстОшибкиДляПользователя, Символы.ПС, "<br/>");

			ОднаСтрока = СтрШаблон(
				"<div><img border=""0"" src=""%1"" height = ""#height""> %2%3%4</div><hr/>",
				СтрокаИсточника,
				СтрокаТекстОшибкиДляПользователя,
				СтрокаНачало,
				СтрокаТекстОшибкиДляАдминистратора);
		Иначе

			ОднаСтрока = СтрШаблон(
				"<div><img border=""0"" src=""%1"" height = ""#height""> %2</div><hr/>",
				СтрокаИсточника,
				СтрЗаменить(Выборка.Описание, Символы.ПС, "<br/>"));

		КонецЕсли;

		Если ЭтоУстройствоСБольшимЭкраном() Тогда
			ОднаСтрока = СтрЗаменить(ОднаСтрока, "#height", "24");
		Иначе
			ОднаСтрока = СтрЗаменить(ОднаСтрока, "#height", "16");
		КонецЕсли;

		СписокТекстом = СписокТекстом + ОднаСтрока;

	КонецЦикла;

	СписокТекстом = СписокТекстом + "</div></body></html>";

	Элементы.СообщитьАдминистратору.Видимость = Ложь;
	Элементы.ФормаПовторитьПопытку.Видимость  = Ложь;

	Если ЕстьОшибки Тогда

		Элементы.СообщитьАдминистратору.Видимость = Истина;
		Элементы.ФормаПовторитьПопытку.Видимость  = Истина;

		Если Не ЭтоУстройствоСБольшимЭкраном() Тогда
			Элементы.СообщитьАдминистратору.Заголовок = 
				НСтр("ru = 'Сообщить админ-у'; en = 'Write to the admin'");
		КонецЕсли;

	КонецЕсли;

	Если Параметры.Свойство("КнопкаПовторить") Тогда
		Элементы.ФормаПовторитьПопытку.Видимость = Параметры.КнопкаПовторить;
	КонецЕсли;

	Если НЕ ЭтоУстройствоСБольшимЭкраном() Тогда
		Элементы.ФормаПовторитьПопытку.Отображение = ОтображениеКнопки.Картинка;
	КонецЕсли;

	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("НеобходимоОтобразитьПослеСинхронизации", Истина);

	Выборка = РегистрыСведений.ПротоколСобытий.Выбрать(,,СтруктураОтбора);
	Пока Выборка.Следующий() Цикл

		МенеджерЗаписи = РегистрыСведений.ПротоколСобытий.СоздатьМенеджерЗаписи();

		МенеджерЗаписи.Период        = Выборка.Период;
		МенеджерЗаписи.МоментВремени = Выборка.МоментВремени;

		МенеджерЗаписи.Прочитать();

		Если МенеджерЗаписи.Выбран() Тогда
			МенеджерЗаписи.НеобходимоОтобразитьПослеСинхронизации = Ложь;
			МенеджерЗаписи.Записать();
		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	РаботаСHTMLКлиентСервер.ДобавитьТегиКСсылкам(СписокТекстом);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СписокТекстомПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)

	РаботаСHTMLКлиент.ОткрытьСсылку(ДанныеСобытия.Href, СтандартнаяОбработка);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбработатьРешениеВопросСообщитьАдминистратору(ОтветПользователя, ДопПараметры) Экспорт

	Если ОтветПользователя = КодВозвратаДиалога.Таймаут 
	 Или ОтветПользователя = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;

	Попытка

		Описание = НСтр("ru = 'Ошибка при синхронизации'; en = 'Synchronization errors'");

		ОбменВызовСервера.ОтправитьИПолучитьДанные(ТекущаяДата(), "ОтправитьОтчетОПроблеме", Ложь, Описание);

		ТекстПредупреждения = 
			НСтр("ru = 'Сообщение успешно отправлено.
				|Ответственные лица оповещены о проблеме.'; 
				|en = 'Message sent'");

		ПоказатьПредупреждение( , ТекстПредупреждения, , ЗаголовокСообщения);

		Элементы.СообщитьАдминистратору.Доступность = Ложь;

	Исключение

		Инфо = ИнформацияОбОшибке();
		РаботаСПротоколомСобытийВызовСервера.ДобавитьОшибку(ПодробноеПредставлениеОшибки(Инфо));

		ТекстПредупреждения = 
			НСтр("ru = 'Не удалось отправить сообщение.
				|Воспользуйтесь другими способами связи.
				|Текст протокола можно скопировать.
				|
				|Подробности см. в протоколе'; 
				|en = 'The message isn''t sent
				|See protocol for details'");

		ПоказатьПредупреждение( , ТекстПредупреждения, ,ЗаголовокСообщения);

	КонецПопытки;

КонецПроцедуры

&НаКлиенте
Процедура СообщитьАдминистратору(Команда)

	ДопПараметры = Неопределено;
	ОбработчикВыбораПользователя = 
		Новый ОписаниеОповещения("ОбработатьРешениеВопросСообщитьАдминистратору", ЭтаФорма, ДопПараметры);

	ТекстВопроса     = НСтр("ru = 'Информация об ошибках будет передана администратору.
							|Продолжить?'; 
							|en = 'All errors will be sent to administrator
							|Continue?'");

	ВариантыВыбора     = РежимДиалогаВопрос.ДаНет;
	ВариантПоУмолчанию = КодВозвратаДиалога.Нет;

	ПоказатьВопрос(ОбработчикВыбораПользователя, ТекстВопроса, ВариантыВыбора, ,
		ВариантПоУмолчанию, ЗаголовокСообщения, );

КонецПроцедуры

&НаКлиенте
Процедура ПовторитьПопытку(Команда)

	ЭтаФорма.Закрыть();

	Оповестить("ПовторитьСинхронизацию");

КонецПроцедуры

#КонецОбласти
