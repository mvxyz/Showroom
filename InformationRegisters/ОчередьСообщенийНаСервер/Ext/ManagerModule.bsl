
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Удаляет указанное сообщение из очереди 
//
// Параметры:
//  Идентификатор - УникальныйИдентификатор - Идентификатор сообщения.
//
Процедура УдалитьСообщение(Идентификатор) Экспорт

	НаборЗаписей = РегистрыСведений.ОчередьСообщенийНаСервер.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Идентификатор.Установить(Идентификатор);
	НаборЗаписей.Записать();

	РегистрыСведений.ПротоколСобытий.ДобавитьИнформацию(
		СтрШаблон(
			НСтр("ru = 'Сообщение обмена ""%1"" удалено из очереди'; 
				 |en = 'The message ""%1"" is removed from queue'"),
			Идентификатор));

	Выборка = РегистрыСведений.ОчередьСообщенийНаСервер.Выбрать();
	Если Выборка.Следующий() Тогда
		Константы.ЕстьНеотправленныеДанные.Установить(Истина);
	КонецЕсли;

КонецПроцедуры

// Очищает очередь сообщений подготовленных для сервера
//
Процедура ОчиститьОчередьСообщенияДляСервера() Экспорт

	Выборка = РегистрыСведений.ОчередьСообщенийНаСервер.Выбрать();

	Пока Выборка.Следующий() Цикл

		УдалитьСообщение(Выборка.Идентификатор);

	КонецЦикла;

КонецПроцедуры

// Возвращает количество сообщений готовых к отправке на сервер
// 
// Возвращаемое значение:
//  Счетчик - Число сообщений в очереди.
//
Функция КоличествоСообщенийВОчереди() Экспорт

	Счетчик = 0;
	Выборка = РегистрыСведений.ОчередьСообщенийНаСервер.Выбрать();

	Пока Выборка.Следующий() Цикл
		Счетчик = Счетчик + 1;
	КонецЦикла;

	Возврат Счетчик;

КонецФункции

#КонецОбласти

#КонецЕсли

