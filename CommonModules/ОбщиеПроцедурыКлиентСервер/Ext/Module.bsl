#Область ПрограммныйИнтерфейс

// Выполняет пересчет суммы табличной части
//
// Параметры:
//  СтрокаТабличнойЧасти  - <Тип.Вид> - <описание параметра>
//
Процедура РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти) Экспорт
	СтрокаТабличнойЧасти.Сумма = СтрокаТабличнойЧасти.Цена * СтрокаТабличнойЧасти.Количество;	
КонецПроцедуры

// Выполняет пересчет количества и цены табличной части
//
// Параметры:
//  СтрокаТабличнойЧасти  - <Тип.Вид> - <описание параметра>
//
Процедура ПриИзмененииСуммыТабЧасти(СтрокаТабличнойЧасти) Экспорт

	Если СтрокаТабличнойЧасти.Количество = 0 Тогда
		СтрокаТабличнойЧасти.Цена = 0;
	Иначе
		СтрокаТабличнойЧасти.Цена = СтрокаТабличнойЧасти.Сумма / СтрокаТабличнойЧасти.Количество;
	КонецЕсли;

КонецПроцедуры

Процедура РассчитатьЦенуПоКурсуВалюты(СтрокаТаблицы, СтараяВалюта, НоваяВалюта, СтарыйКоэффициентПересчетаВалюты) Экспорт
	
	Если ЗначениеЗаполнено(СтараяВалюта) 
			И СтараяВалюта <> НоваяВалюта Тогда
			
			НовыйКоэффициентПересчетаВалюты = ОбщиеПроцедурыВызовСервера.ПолучитьКоэффициентПересчетаВалюты(НоваяВалюта);
			
			Если НовыйКоэффициентПересчетаВалюты <> СтарыйКоэффициентПересчетаВалюты 
				И СтарыйКоэффициентПересчетаВалюты > 0 Тогда
				
				СтрокаТаблицы.Цена = СтрокаТаблицы.Цена * (НовыйКоэффициентПересчетаВалюты / СтарыйКоэффициентПересчетаВалюты);
				
			КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

Функция ПолучитьТекстСообщенияОПревышенииОстатка(Количество, ЕдиницаИзмерения, СвободныйОстаток) Экспорт
	
	ТекстСообщения = "Выбранное количество " + 
					Количество + " " + СокрЛП(ЕдиницаИзмерения) +  
					" превышает свободный остаток " + 
					Окр(СвободныйОстаток, 2) + " " + СокрЛП(ЕдиницаИзмерения) + ".";
	
	Возврат ТекстСообщения;
	
КонецФункции


#КонецОбласти

