
#Область ПрограммныйИнтерфейс

// Начинает процедуру очистки базы данных от всей информации.
//
// Параметры:
//  ЭтаФорма - Форма - Форма, в которой начался процесс.
//
Процедура НачатьОчисткуБазыДанных(ЭтаФорма) Экспорт

	ДопПараметры = Новый Структура();
	ДопПараметры.Вставить("ЭтаФорма", ЭтаФорма);

	ОбработчикВыбораПользователя = 
		Новый ОписаниеОповещения("ОбработатьРешениеПервыйВопросОбУдаленииДанных", 
			ОчисткаБазыДанныхКлиент, ДопПараметры);

	ЗаголовокВопроса = 
		НСтр("ru = 'Удаление всех данных'; 
			|en = 'Erase all content and settings'");

	ТекстВопроса = 
		НСтр("ru = 'Все данные этого приложения будут полностью удалены.
			|Продолжить удаление?'; 
			|en = 'All content and settings will be erased
			|Continue?'");

	ВариантыВыбора = РежимДиалогаВопрос.ДаНет;
	ВариантПоУмолчанию = КодВозвратаДиалога.Нет;

	ПоказатьВопрос(ОбработчикВыбораПользователя, ТекстВопроса, ВариантыВыбора,,
		ВариантПоУмолчанию, ЗаголовокВопроса);

КонецПроцедуры

// Обработчик решения пользователя на первое предупреждение, что все данные будут удалены.
//
// Параметры:
//  ОтветПользователя	 - КодВозвратаДиалога - Ответ пользователя на первый вопрос об удалении.
//  ДопПараметры - Структура, Неопределено - Доп. параметры передаваемые в процедуру.
//
Процедура ОбработатьРешениеПервыйВопросОбУдаленииДанных(ОтветПользователя, ДопПараметры) Экспорт
	
	Если ОтветПользователя = КодВозвратаДиалога.Таймаут 
	 Или ОтветПользователя = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;

	ОбработчикВыбораПользователя = 
		Новый ОписаниеОповещения("ОбработатьРешениеВторойВопросОбУдаленииДанных", 
			ОчисткаБазыДанныхКлиент, ДопПараметры);

	ЗаголовокВопроса = 
		НСтр("ru = 'Удаление всех данных';
			|en = 'Erase all content and settings'");
	ТекстВопроса = 
		НСтр("ru = 'Внимание! Все данные этого приложения будут безвозвратно удалены.
			|Продолжить удаление?'; 
			|en = 'All contents and settings will be irrevocably erased
			|continue?'");

	ВариантыВыбора     = РежимДиалогаВопрос.ДаНет;
	ВариантПоУмолчанию = КодВозвратаДиалога.Нет;

	ПоказатьВопрос(ОбработчикВыбораПользователя, ТекстВопроса, ВариантыВыбора,,
		ВариантПоУмолчанию, ЗаголовокВопроса);

КонецПроцедуры

// Обработчик решения пользователя на второе предупреждение, что все данные будут удалены.
//
// Параметры:
//  ОтветПользователя	 - КодВозвратаДиалога - Ответ пользователя на второй вопрос об удалении.
//  ДопПараметры - Структура, Неопределено - Доп. параметры передаваемые в процедуру.
//
Процедура ОбработатьРешениеВторойВопросОбУдаленииДанных(ОтветПользователя, ДопПараметры) Экспорт

	Если ОтветПользователя = КодВозвратаДиалога.Таймаут 
	 Или ОтветПользователя = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;

	ОчисткаБазыДанныхВызовСервера.ОчиститьПринятыеДанные();

	РежимСинхронизации = "ОтключитьУстройство";
	ПараметрыЗапуска = Новый Структура();
	ПараметрыЗапуска.Вставить("РежимСинхронизации", РежимСинхронизации);

	Оповестить("НачатьСинхронизацию", ПараметрыЗапуска);

	ОчисткаБазыДанныхВызовСервера.ДождатьсяОкончанияПроцессаОтключенияОтСервера(
		РежимСинхронизации);

	ОчисткаБазыДанныхВызовСервера.УдалитьВсеДанные();
	РаботаСПротоколомСобытийВызовСервера.ДобавитьИнформацию(
		НСтр("ru = 'Полная очистка'; en = 'Full cleaning'"));

	ОбработчикПредупрежденияПользователя = 
		Новый ОписаниеОповещения("ОбработатьПредупреждениеОбОкончанииПолногоУдаления", 
			ОчисткаБазыДанныхКлиент, ДопПараметры);

	ЗаголовокПредупреждения = 
		НСтр("ru = 'Удаление всех данных'");
	ТекстПредупреждения = 
		НСтр("ru = 'Все данные успешно удалены. Приложение будет перезапущено.'");

	ПоказатьПредупреждение(ОбработчикПредупрежденияПользователя,
		ТекстПредупреждения,, ЗаголовокПредупреждения);
		
КонецПроцедуры 

// Завершающие действия после удаления всех данных в базе.
//
// Параметры:
//  ДопПараметры - Структура, Неопределено - Доп. параметры передаваемые в процедуру.
//
Процедура ОбработатьПредупреждениеОбОкончанииПолногоУдаления(ДопПараметры) Экспорт

	ЗавершитьРаботуСистемы(Ложь, Истина);
	
КонецПроцедуры

Процедура ПродолжитьОчисткуБазыДанных() Экспорт

	ОбработчикВыбораПользователя = 
		Новый ОписаниеОповещения("ОбработатьРешениеВопросОПродолженииУдаленияДанных", 
			ОчисткаБазыДанныхКлиент);

	ЗаголовокВопроса = 
		НСтр("ru = 'Удаление всех данных'; 
			|en = 'Erase all content and settings'");

	ТекстВопроса = 
		НСтр("ru = 'Процесс удаления данных был прерван.
			|До завершения процесса работа в программе невозможна.
			|Продолжить удаление?'; 
			|en = 'Data deletion process has been interrupted.
			|The app is unable to use until the process is finished.  
			|Continue?'");

	ВариантыВыбора = РежимДиалогаВопрос.ДаНет;
	ВариантПоУмолчанию = КодВозвратаДиалога.Нет;

	ПоказатьВопрос(ОбработчикВыбораПользователя, ТекстВопроса, ВариантыВыбора,,
		ВариантПоУмолчанию, ЗаголовокВопроса);

КонецПроцедуры

// Обработчик решения пользователя на второе предупреждение, что все данные будут удалены.
//
// Параметры:
//  ОтветПользователя	 - КодВозвратаДиалога - Ответ пользователя на второй вопрос об удалении.
//  ДопПараметры - Структура, Неопределено - Доп. параметры передаваемые в процедуру.
//
Процедура ОбработатьРешениеВопросОПродолженииУдаленияДанных(ОтветПользователя, ДопПараметры = Неопределено) Экспорт

	Если ОтветПользователя = КодВозвратаДиалога.Таймаут 
	 Или ОтветПользователя = КодВозвратаДиалога.Нет Тогда
		ЗавершитьРаботуСистемы(Ложь);
		Возврат;
	КонецЕсли;

	ОчисткаБазыДанныхВызовСервера.ОчиститьПринятыеДанные();

	РежимСинхронизации = "ОтключитьУстройство";
	ПараметрыЗапуска = Новый Структура();
	ПараметрыЗапуска.Вставить("РежимСинхронизации", РежимСинхронизации);

	Оповестить("НачатьСинхронизацию", ПараметрыЗапуска);

	ОчисткаБазыДанныхВызовСервера.ДождатьсяОкончанияПроцессаОтключенияОтСервера(
		РежимСинхронизации);

	ОчисткаБазыДанныхВызовСервера.УдалитьВсеДанные();
	
	РаботаСПротоколомСобытийВызовСервера.ДобавитьИнформацию(
		НСтр("ru = 'Полная очистка'; en = 'Full cleaning'"));

	ЗаголовокПредупреждения = 
		НСтр("ru = 'Удаление всех данных'; 
			|en = 'Erase all content and settings'");
	ТекстПредупреждения = 
		НСтр("ru = 'Все данные успешно удалены.';
			|en = 'All data are successfully cleared'");
		
	ОбменКлиент.ПоказатьФормуНастройкиПодключения();
	
	ПоказатьПредупреждение( , ТекстПредупреждения, , ЗаголовокПредупреждения);

КонецПроцедуры

#КонецОбласти
