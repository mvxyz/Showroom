
#Область ПрограммныйИнтерфейс

// Возвращает цену, валюту цены и единицу измерения цены
//
Функция ПолучитьЦенуНоменклатуры(Номенклатура, ТипЦен, ХарактеристикаНоменклатуры = Неопределено) Экспорт
	
	ДанныеЦены = Новый Структура("Цена, Валюта, ЕдиницаИзмерения",
								0, 
								Справочники.Валюты.ПустаяСсылка(), 
								Справочники.ЕдиницыИзмерения.ПустаяСсылка());
	
	Если ХарактеристикаНоменклатуры = Неопределено Тогда
		ХарактеристикаНоменклатуры = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ЦеныНоменклатуры.Цена КАК Цена,
	|	ЦеныНоменклатуры.Валюта КАК Валюта,
	|	ЦеныНоменклатуры.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|ГДЕ
	|	ЦеныНоменклатуры.ТипЦен = &ТипЦен
	|	И ЦеныНоменклатуры.Номенклатура = &Номенклатура
	|	И ЦеныНоменклатуры.ХарактеристикаНоменклатуры = &ХарактеристикаНоменклатуры";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("ТипЦен", ТипЦен);
	Запрос.УстановитьПараметр("ХарактеристикаНоменклатуры", ХарактеристикаНоменклатуры);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда 
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ДанныеЦены, Выборка)
	КонецЕсли;
	
	Возврат ДанныеЦены;

КонецФункции

Функция ЕстьУстановленныеЦеныДляТипаЦены(Номенклатура, ТипЦен) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ЦеныНоменклатуры.Цена КАК Цена
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|ГДЕ
	|	ЦеныНоменклатуры.ТипЦен = &ТипЦен
	|	И ЦеныНоменклатуры.Номенклатура = &Номенклатура";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("ТипЦен", ТипЦен);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат НЕ РезультатЗапроса.Пустой();

КонецФункции

// Возвращает свободный остаток товара
//
Функция ПолучитьСвободныйОстатокТовара(Номенклатура, ХарактеристикаНоменклатуры = Неопределено) Экспорт
	
	СвободныйОстаток = 0;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	Если НЕ ХарактеристикаНоменклатуры = Неопределено Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТоварыОстатки.Номенклатура КАК Номенклатура,
		|	ТоварыОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	СУММА(ТоварыОстатки.СвободныйОстаток) КАК СвободныйОстаток
		|ИЗ
		|	РегистрСведений.ТоварыОстатки КАК ТоварыОстатки
		|ГДЕ
		|	ТоварыОстатки.Номенклатура = &Номенклатура
		|	И ТоварыОстатки.ХарактеристикаНоменклатуры = &ХарактеристикаНоменклатуры
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыОстатки.Номенклатура,
		|	ТоварыОстатки.ХарактеристикаНоменклатуры";
		
		Запрос.УстановитьПараметр("ХарактеристикаНоменклатуры", ХарактеристикаНоменклатуры);
		
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТоварыОстатки.Номенклатура КАК Номенклатура,
		|	СУММА(ТоварыОстатки.СвободныйОстаток) КАК СвободныйОстаток
		|ИЗ
		|	РегистрСведений.ТоварыОстатки КАК ТоварыОстатки
		|ГДЕ
		|	ТоварыОстатки.Номенклатура = &Номенклатура
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыОстатки.Номенклатура";
		
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		СвободныйОстаток = Выборка.СвободныйОстаток;
	Иначе
		СвободныйОстаток = 0;
	КонецЕсли;
	
	Возврат СвободныйОстаток;

КонецФункции

// Возвращает  элемент справочника Корзины для текущего пользвателя
//
Функция ПолучитьКорзину() Экспорт
	
	Возврат ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьКорзину();
	
КонецФункции

// Добавляет строку товара в табличную часть корзины текущего пользователя
// Параметры:
//  ПараметрыТовара  - Структура - должна содержать свойства Номенклатура и ХарактеристикаНоменклатуры
//
Процедура ДобавитьТоварВКоризну(ПараметрыТовара) Экспорт
	
	Корзина = ОбщиеПроцедурыВызовСервера.ПолучитьКорзину();
	КорзинаОбъект = Корзина.ПолучитьОбъект();
	
	ЕстьХарактеристика = ПараметрыТовара.Свойство("ХарактеристикаНоменклатуры");
	Для каждого Стр Из КорзинаОбъект.СоставКорзины Цикл
		Если Стр.Номенклатура = ПараметрыТовара.Номенклатура
			И ?(ЕстьХарактеристика, Стр.ХарактеристикаНоменклатуры = ПараметрыТовара.ХарактеристикаНоменклатуры, Истина) Тогда
			
			ТекстСообщения = "Этот товар уже есть в корзине!";
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения); 
			Возврат;
			
		КонецЕсли;
	КонецЦикла;
	
	НоваяСтрока = КорзинаОбъект.СоставКорзины.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ПараметрыТовара);
	НоваяСтрока.Количество = 1;
	//НоваяСтрока.ЕдиницаИзмерения = НоваяСтрока.Номенклатура.ЕдиницаИзмерения;
	КорзинаОбъект.Записать();
	
	ТекстСообщения = "Товар добавлен в корзину!";
	ОбщегоНазначения.СообщитьПользователю(ТекстСообщения); 
	
КонецПроцедуры

Функция ПолучитьКоэффициентПересчетаВалюты(Валюта) Экспорт
	
	КоэффициентПересчетаВалюты = 1;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КурсыВалют.Курс КАК Курс,
		|	КурсыВалют.Кратность КАК Кратность
		|ИЗ
		|	РегистрСведений.КурсыВалют КАК КурсыВалют
		|ГДЕ
		|	КурсыВалют.Валюта = &Валюта";
	
	Запрос.УстановитьПараметр("Валюта", Валюта);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		КоэффициентПересчетаВалюты = Выборка.Курс / Выборка.Кратность;
	КонецЕсли;
	
	Возврат КоэффициентПересчетаВалюты;
	
КонецФункции

Функция ПолучитьОсновнуюОрганизацию() Экспорт 
	
	Возврат ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьЗначениеКонстанты("ОсновнаяОрганизацияМобильногоКлиента");
	
КонецФункции

Функция ПолучитьВалютуЗаказаПоУмолчанию() Экспорт 
	
	Возврат ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьЗначениеКонстанты("ВалютаЗаказаМобильногоКлиентаПоУмолчанию");
	
КонецФункции

Функция ОстаткаТовараДостаточно(Номенклатура, ХарактеристикаНоменклатуры, 
								ЗатребованноеКоличество, ВыбраннаяЕдиницаИзмерения, 
								СвободныйОстаток = 0, НомерСТроки = Неопределено) Экспорт
	
	СвободныйОстаток = ПолучитьСвободныйОстатокТовара(Номенклатура, ХарактеристикаНоменклатуры);
	
	ЕдиницаХраненияОстатков = Номенклатура.ЕдиницаИзмерения;
	
	Если ВыбраннаяЕдиницаИзмерения.Коэффициент = 0 Тогда
		ТекстСообщения = "У единицы измерения '" + СокрЛП(ВыбраннаяЕдиницаИзмерения) + 
		"' коэффициент равен нулю! Введите коэффициент в центральной базе!";
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	    Возврат Ложь;
	КонецЕсли;
	
	СвободныйОстаток = СвободныйОстаток * ЕдиницаХраненияОстатков.Коэффициент / ВыбраннаяЕдиницаИзмерения.Коэффициент;
	
	Если СвободныйОстаток < ЗатребованноеКоличество Тогда
		
		//ТекстСообщения = ОбщиеПроцедурыКлиентСервер.ПолучитьТекстСообщенияОПревышенииОстатка(
		//ЗатребованноеКоличество, ВыбраннаяЕдиницаИзмерения, СвободныйОстаток);
		
		Если НомерСТроки = Неопределено Тогда
			ТекстСообщения = "Выбранное количество " + 
				ЗатребованноеКоличество + " " + СокрЛП(ВыбраннаяЕдиницаИзмерения) +  
				" превышает свободный остаток " + 
				Окр(СвободныйОстаток, 2) + " " + СокрЛП(ВыбраннаяЕдиницаИзмерения) + ".";
		Иначе
			ТекстСообщения = "В строке " + НомерСтроки + " количество " + 
				ЗатребованноеКоличество + " " +  СокрЛП(ВыбраннаяЕдиницаИзмерения) +
				" превышает свободный остаток " + 
				Окр(СвободныйОстаток, 2) + " " + СокрЛП(ВыбраннаяЕдиницаИзмерения) + ".";
		КонецЕсли;
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		
		Возврат Ложь;
		
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

Функция КоличествоСеансов() Экспорт
	
	КоличествоСеансов = 0;
	
	СеансыИнформационнойБазы = ПолучитьСеансыИнформационнойБазы();
	
	Для Каждого СеансИБ Из СеансыИнформационнойБазы Цикл
		ИмяПриложения = СеансИБ.ИмяПриложения;
		Если ИмяПриложения = "MobileClient"
			ИЛИ ИмяПриложения = "1CV8C" 
			ИЛИ ИмяПриложения = "WebClient" 
			Тогда
			
			КоличествоСеансов = КоличествоСеансов + 1;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СокрЛП(КоличествоСеансов);
	
КонецФункции

#КонецОбласти


