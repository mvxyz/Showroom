#Область ОписаниеПеременных

// СтандартныеПодсистемы

// Хранилище глобальных переменных.
//
// ПараметрыПриложения - Соответствие - хранилище переменных, где:
//   * Ключ - Строка - имя переменной в формате "ИмяБиблиотеки.ИмяПеременной";
//   * Значение - Произвольный - значение переменной.
//
// Инициализация (на примере СообщенияДляЖурналаРегистрации):
//   ИмяПараметра = "СтандартныеПодсистемы.СообщенияДляЖурналаРегистрации";
//   Если ПараметрыПриложения[ИмяПараметра] = Неопределено Тогда
//     ПараметрыПриложения.Вставить(ИмяПараметра, Новый СписокЗначений);
//   КонецЕсли;
//  
// Использование (на примере СообщенияДляЖурналаРегистрации):
//   ПараметрыПриложения["СтандартныеПодсистемы.СообщенияДляЖурналаРегистрации"].Добавить(...);
//   ПараметрыПриложения["СтандартныеПодсистемы.СообщенияДляЖурналаРегистрации"] = ...;
//
Перем ПараметрыПриложения Экспорт;

// Конец СтандартныеПодсистемы

// Признак того, что база только что создана, или полностью очищена
//
Перем ЭтоЧистаяБаза; 

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПередНачаломРаботыСистемы(Отказ)
	
	// СтандартныеПодсистемы
	СтандартныеПодсистемыКлиент.ПередНачаломРаботыСистемы();
	// Конец СтандартныеПодсистемы
	
	// Получим имя каталога временных файлов
	ИмяКаталогаВременныхФайлов = ПолучитьИмяКаталогаВременныхФайлов();
	
	Параметры = ОбщегоНазначенияВызовСервера.УстановитьПервоначальныеНастройки(
	ИмяКаталогаВременныхФайлов);
	
	ЭтоЧистаяБаза = Параметры.ЭтоЧистаяБаза;
	//ТекущийРаздел = Параметры.ТекущийРаздел;

КонецПроцедуры

Процедура ПриНачалеРаботыСистемы()
	
	// СтандартныеПодсистемы
	СтандартныеПодсистемыКлиент.ПриНачалеРаботыСистемы();
	// Конец СтандартныеПодсистемы
	
	//// Проверяем не превышено ли количество лицензий
	//ПревышеноКоличествоЛицензий = ОбщиеПроцедурыВызовСервера.ПревышеноКоличествоЛицензийВизард(1);
	//Если ПревышеноКоличествоЛицензий Тогда
	//	 ОткрытьФорму("ОбщаяФорма.НетСвободныхЛицензий",,,,,,,РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	//КонецЕсли;
	
	ОбщегоНазначенияКлиент.ВыполнитьДействияПриЗапускеСистемы(ЭтоЧистаяБаза);

	ПодключитьОбработчикОповещения("ОбработкаОбщихОповещений");
	
КонецПроцедуры

Процедура ПередЗавершениемРаботыСистемы(Отказ, ТекстПредупреждения)
	
	// СтандартныеПодсистемы
	СтандартныеПодсистемыКлиент.ПередЗавершениемРаботыСистемы(Отказ, ТекстПредупреждения);
	// Конец СтандартныеПодсистемы
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьИмяКаталогаВременныхФайлов()

	ИмяКаталогаВременныхФайлов = СокрЛП(КаталогДокументов());
	Если СтрЗаканчиваетсяНа(ИмяКаталогаВременныхФайлов, "\")
	 Или СтрЗаканчиваетсяНа(ИмяКаталогаВременныхФайлов, "/") Тогда
		ИмяКаталогаВременныхФайлов = ИмяКаталогаВременныхФайлов + "temp";
	ИначеЕсли СтрНайти(ИмяКаталогаВременныхФайлов, "\") > 0 Тогда
		ИмяКаталогаВременныхФайлов = ИмяКаталогаВременныхФайлов + "\temp";
	ИначеЕсли СтрНайти(ИмяКаталогаВременныхФайлов, "/") > 0 Тогда
		ИмяКаталогаВременныхФайлов = ИмяКаталогаВременныхФайлов + "/temp";
	КонецЕсли;
	
	Возврат ИмяКаталогаВременныхФайлов;

КонецФункции

Процедура ОбработкаОбщихОповещений(ИмяСобытия, Параметр, Источник) Экспорт
	
	//Если ИмяСобытия = "СинхронизацияЗавершена" Тогда
	//	ОчисткаБазыДанныхВызовСервера.ЗапуститьОчисткуОтСтарыхДанныхВФоне();
	//КонецЕсли;	
		
КонецПроцедуры

#КонецОбласти

